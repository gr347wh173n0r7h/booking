// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	model "github.com/booking/model"

	mock "github.com/stretchr/testify/mock"
)

// RoomService is an autogenerated mock type for the RoomService type
type RoomService struct {
	mock.Mock
}

// Create provides a mock function with given fields: r
func (_m *RoomService) Create(r *model.Room) error {
	ret := _m.Called(r)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Room) error); ok {
		r0 = rf(r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: id
func (_m *RoomService) Delete(id int64) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int64) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: id
func (_m *RoomService) Get(id int64) (*model.Room, error) {
	ret := _m.Called(id)

	var r0 *model.Room
	if rf, ok := ret.Get(0).(func(int64) *model.Room); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Room)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAll provides a mock function with given fields: roomName, companyName
func (_m *RoomService) GetAll(roomName string, companyName string) ([]model.Room, error) {
	ret := _m.Called(roomName, companyName)

	var r0 []model.Room
	if rf, ok := ret.Get(0).(func(string, string) []model.Room); ok {
		r0 = rf(roomName, companyName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Room)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(roomName, companyName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
